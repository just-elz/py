from random import randrange

# ввод значения
value = input('enter data like NdM, NdM, NdM...\n\
N - number of dice, M - number of sides: ').replace(' ', '')
if len(value) < 4:
	value = [value]

if len(value) > 4:
	value = value.split(',')

# проверка корректности
check = []
for any in value:
	check.append(any.split('d'))

for any in check:
	if len(any) != 2:
		print('\nincorrect input')
		exit()

	if [kek for kek in any if kek == '0']:
		print('\nincorrect input')
		exit()

	if [kek for kek in any if not kek.isdigit()]:
		print('\nincorrect input')
		exit()

# лист бросков
value = [list(map(int, any)) for any in check]
throws_list = []
for any in value:
	while any[0] != 0:
		throws_list.append(any[-1])
		any[0] -= 1

throws_list.sort(reverse=True)
num_dices = throws_list

# ЗАПОЛНИ МЕНЯ
answer_sums = []
answer_chances = []

# ЗАПОЛНИ МЕНЯ
def plus_throw():
	global answer_sums
	global answer_chances
	global throws_list

	if answer_sums:
		# шанс для 2ого броска
		sec_throw_chance = 1/throws_list[0]

		# список сумм с которым будет работать функция(в конце заменить глобал на этот)
		def_sums = [any for any in range(answer_sums[0] + 1, throws_list[0] + answer_sums[-1] + 1)]

		# список шансов сумм прошлого броска
		def_chances = answer_chances
		def_chances = [any * sec_throw_chance for any in def_chances]
		
		# просто забиваем список шансов первым значением
		# до момента пока он не будет той же длинны что и def_sums
		while len(def_chances) != len(def_sums):
			def_chances.append(def_chances[0])

		# список шансов для нынешней суммы(в конце заменить глобал на этот)
		def_chances_f = []

		# переменная для изменения срезов
		for_slice = []

		# подсчитываем шансы(заменяет срез в def_chances_f или создает начальный)
		def plus_chance():
			nonlocal def_chances_f
			nonlocal def_chances
			nonlocal for_slice
			global throws_list

			if def_chances_f:
				# переменная для создания среза, в который мы будем вставлять шанс суммы
				if for_slice:
					def_for_slice = for_slice
				else:
					if len(def_chances_f) % 2:
						def_for_slice = [any for any in range(1, len(def_chances) // 2 + 1)]
					else:
						def_for_slice = [any for any in range(1, len(def_chances) // 2)]

				# срез чисел(шансов), до нужной суммы
				def_slice = def_chances[:def_for_slice[0] + 1]

				# переменная, чтоб взять нужно коль-во слагаемых для получения шанса суммы
				for_sec_slice = throws_list[0]

				# срез чисел, которые мы будем складывать для получения шанса суммы
				sum_slice = def_slice[-for_sec_slice:]

				# переменная для вычисления шанса суммы(которым в дальнешем мы заполним срез)
				chance = 0
				for any in range(len(sum_slice)):				
					chance += sum_slice[any]

				# заменяем срез на срез с нашим шансом
				def_chances_f[def_for_slice[0]:-def_for_slice[0]] = \
				[chance for _ in range(len(def_chances_f[def_for_slice[0]:-def_for_slice[0]]))]

				# сокращаем переменную для среза
				for_slice = def_for_slice[1:]

			else:
				def_chances_f = [def_chances[0] for any in range(len(def_chances))]

		# переменная указывающая коль-во запусков plus_throw()
		# длинна которой равна половине длинны сумм
		if len(def_sums) % 2:
			half_range = [any for any in range(len(def_chances) // 2 + 1)]
		else:
			half_range = [any for any in range(len(def_chances) // 2)]
		
		for _ in half_range:
			plus_chance()

		def_chances = def_chances_f

	else:
		def_sums = [any for any in range(1, throws_list[0] + 1)]
		def_chances = [1/throws_list[0] for any in range(throws_list[0])]

	throws_list = throws_list[1:]
	answer_sums = def_sums
	answer_chances = def_chances

for _ in num_dices:
	plus_throw()

# вывод ответа
answer_percent = [any * 100 for any in answer_chances]
for indx in range(len(answer_sums)):
	print(f'\n{answer_sums[indx]:>2} = {answer_percent[indx]:7.4f} %')

# модулируем бросок
roll = input('\nwanna roll the dice?(y/n)')
if roll == 'y':
	roll_sum = 0
	for any in num_dices:
		roll_sum += randrange(1, any)
	
	if roll_sum == answer_sums[-1]:
		print('\nDROPED: ', roll_sum)
		print('''\n
                          ....-*%:.                       
                     .+*:=##%@####=.                      
              .-:@##################@@#%+:                
             .:##########################:...             
          .--@###########################%@#+::.          
         .:####################################%-         
       .+####################################%.           
      :######################@@%=++++%@######@.           
     -##################%===++******::***=%###:           
     +#################%+*::::::::::::::****%#@-          
    -#################@@=+*:::::::::::::::**+%#=.         
    -##################@@=+***:::::::::::*::**%%.         
     *#################@=++****+%@%%%%=+**::+@#=.         
     .@################=*******:::::*+++****===*.         
     .%###############=**:::***:*+=%%===+*+=+++:.         
      :###=%%=%######%+***:::**+***=@%+:::+=*+@:          
      .@##+*:*=%%%##@@=***::::::*====*:::-:+===.          
      .*##%**%%=++%##@=+***::::::::::::::::*+++-          
        :##=:**+*+=@#@=++*****::::::::::::::***:.         
        .%##%*::*+=@#@@=++++***********::::****:.         
         -####%====%@@@%====++++****::+%##@%=++-          
         .=###%@%==%======%%======+*:::::*+==+-           
          -=@%%%==========%%====++****:::**++*.           
            .+======%%%%%=+++++*+==++=@####%+.            
             .*=====%%%%%==+++++++==@####@%-              
               -+=============++**+===%@@@=-              
                .:+========+==+*++=%%%=+++:.              
                 .-*+=======+===+==%%%%%+.                
                   .:+====%%%=%%==+=%%%=.                 
                     .-+===%%%%%%%%==%*.                  
                        .:+=========:.                    
''')

	if roll_sum > len(answer_sums) // 2 and roll_sum != answer_sums[-1]:
		print('\nDroped: ', roll_sum)
		print('''
░░░░░░░░░▄██████████▄▄░░░░░░░░
░░░░░░▄█████████████████▄░░░░░
░░░░░██▀▀▀▀▀▀▀▀▀▀▀████████░░░░
░░░░██░░░░░░░░░░░░░░███████░░░
░░░██░░░░░░░░░░░░░░░████████░░
░░░█▀░░░░░░░░░░░░░░░▀███████░░
░░░█▄▄██▄░░░▀█████▄░░▀██████░░
░░░█▀███▄▀░░░▄██▄▄█▀░░░█████▄░
░░░█░░▀▀█░░░░░▀▀░░░▀░░░██░░▀▄█
░░░█░░░█░░░▄░░░░░░░░░░░░░██░██
░░░█░░█▄▄▄▄█▄▀▄░░░░░░░░░▄▄█▄█░
░░░█░░█▄▄▄▄▄▄░▀▄░░░░░░░░▄░▀█░░
░░░█░█▄████▀██▄▀░░░░░░░█░▀▀░░░
░░░░██▀░▄▄▄▄░░░▄▀░░░░▄▀█░░░░░░
░░░░░█▄▀░░░░▀█▀█▀░▄▄▀░▄▀░░░░░░
░░░░░▀▄░░░░░░░░▄▄▀░░░░█░░░░░░░
░░░░░▄██▀▀▀▀▀▀▀░░░░░░░█▄░░░░░░
░░▄▄▀░░░▀▄░░░░░░░░░░▄▀░▀▀▄░░░░
▄▀▀░░░░░░░█▄░░░░░░▄▀░░░░░░█▄░░
█░░░░░░░░░░░░░░░░░░░░░░░░░░▀█▄
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
█▄░░█ █▀▀█ ▀▀█▀▀░░█▀▀█ █▀▀█ █▀▀▄
█░█░█ █░░█ ░░█░░░░█▀▀▄ █▄▄█ █░░█
█░░▀█ █▄▄█ ░░█░░░░█▄▄█ █░░█ █▄▄▀
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
''')

	if roll_sum < len(answer_sums) // 2:
		print('\noh no, only: ', roll_sum)
		print('''
░░░░░░░░░▄░░░░░░░░░░░░░░▄
░░░░░░░░▌▒█░░░░░░░░░░░▄▀▒▌
░░░░░░░░▌▒▒█░░░░░░░░▄▀▒▒▒▐
░░░░░░░▐▄▀▒▒▀▀▀▀▄▄▄▀▒▒▒▒▒▐
░░░░░▄▄▀▒░▒▒▒▒▒▒▒▒▒█▒▒▄█▒▐
░░░▄▀▒▒▒░░░▒▒▒░░░▒▒▒▀██▀▒▌
░░▐▒▒▒▄▄▒▒▒▒░░░▒▒▒▒▒▒▒▀▄▒▒▌
░░▌░░▌█▀▒▒▒▒▒▄▀█▄▒▒▒▒▒▒▒█▒▐
░▐░░░▒▒▒▒▒▒▒▒▌██▀▒▒░░░▒▒▒▀▄
░▌░▒▄██▄▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒▌
▌▒▀▐▄█▄█▌▄░▀▒▒░░░░░░░░░░▒▒▌
''')

	while True:
		roll = input('\nwanna roll again?(y/n)')
		if roll == 'y':
			roll_sum = 0
			for any in num_dices:
				roll_sum += randrange(1, any)
			
			if roll_sum == answer_sums[-1]:
				print('\nDROPED: ', roll_sum)
				print('''\n
                          ....-*%:.                       
                     .+*:=##%@####=.                      
              .-:@##################@@#%+:                
             .:##########################:...             
          .--@###########################%@#+::.          
         .:####################################%-         
       .+####################################%.           
      :######################@@%=++++%@######@.           
     -##################%===++******::***=%###:           
     +#################%+*::::::::::::::****%#@-          
    -#################@@=+*:::::::::::::::**+%#=.         
    -##################@@=+***:::::::::::*::**%%.         
     *#################@=++****+%@%%%%=+**::+@#=.         
     .@################=*******:::::*+++****===*.         
     .%###############=**:::***:*+=%%===+*+=+++:.         
      :###=%%=%######%+***:::**+***=@%+:::+=*+@:          
      .@##+*:*=%%%##@@=***::::::*====*:::-:+===.          
      .*##%**%%=++%##@=+***::::::::::::::::*+++-          
        :##=:**+*+=@#@=++*****::::::::::::::***:.         
        .%##%*::*+=@#@@=++++***********::::****:.         
         -####%====%@@@%====++++****::+%##@%=++-          
         .=###%@%==%======%%======+*:::::*+==+-           
          -=@%%%==========%%====++****:::**++*.           
            .+======%%%%%=+++++*+==++=@####%+.            
             .*=====%%%%%==+++++++==@####@%-              
               -+=============++**+===%@@@=-              
                .:+========+==+*++=%%%=+++:.              
                 .-*+=======+===+==%%%%%+.                
                   .:+====%%%=%%==+=%%%=.                 
                     .-+===%%%%%%%%==%*.                  
                        .:+=========:.                    
''')

			if roll_sum > len(answer_sums) // 2 and roll_sum != answer_sums[-1]:
				print('\nDroped: ', roll_sum)
				print('''\n
░░░░░░░░░▄██████████▄▄░░░░░░░░
░░░░░░▄█████████████████▄░░░░░
░░░░░██▀▀▀▀▀▀▀▀▀▀▀████████░░░░
░░░░██░░░░░░░░░░░░░░███████░░░
░░░██░░░░░░░░░░░░░░░████████░░
░░░█▀░░░░░░░░░░░░░░░▀███████░░
░░░█▄▄██▄░░░▀█████▄░░▀██████░░
░░░█▀███▄▀░░░▄██▄▄█▀░░░█████▄░
░░░█░░▀▀█░░░░░▀▀░░░▀░░░██░░▀▄█
░░░█░░░█░░░▄░░░░░░░░░░░░░██░██
░░░█░░█▄▄▄▄█▄▀▄░░░░░░░░░▄▄█▄█░
░░░█░░█▄▄▄▄▄▄░▀▄░░░░░░░░▄░▀█░░
░░░█░█▄████▀██▄▀░░░░░░░█░▀▀░░░
░░░░██▀░▄▄▄▄░░░▄▀░░░░▄▀█░░░░░░
░░░░░█▄▀░░░░▀█▀█▀░▄▄▀░▄▀░░░░░░
░░░░░▀▄░░░░░░░░▄▄▀░░░░█░░░░░░░
░░░░░▄██▀▀▀▀▀▀▀░░░░░░░█▄░░░░░░
░░▄▄▀░░░▀▄░░░░░░░░░░▄▀░▀▀▄░░░░
▄▀▀░░░░░░░█▄░░░░░░▄▀░░░░░░█▄░░
█░░░░░░░░░░░░░░░░░░░░░░░░░░▀█▄
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
█▄░░█ █▀▀█ ▀▀█▀▀░░█▀▀█ █▀▀█ █▀▀▄
█░█░█ █░░█ ░░█░░░░█▀▀▄ █▄▄█ █░░█
█░░▀█ █▄▄█ ░░█░░░░█▄▄█ █░░█ █▄▄▀
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
''')

			if roll_sum < len(answer_sums) // 2:
				print('\noh no, only: ', roll_sum)
				print('''\n
░░░░░░░░░▄░░░░░░░░░░░░░░▄
░░░░░░░░▌▒█░░░░░░░░░░░▄▀▒▌
░░░░░░░░▌▒▒█░░░░░░░░▄▀▒▒▒▐
░░░░░░░▐▄▀▒▒▀▀▀▀▄▄▄▀▒▒▒▒▒▐
░░░░░▄▄▀▒░▒▒▒▒▒▒▒▒▒█▒▒▄█▒▐
░░░▄▀▒▒▒░░░▒▒▒░░░▒▒▒▀██▀▒▌
░░▐▒▒▒▄▄▒▒▒▒░░░▒▒▒▒▒▒▒▀▄▒▒▌
░░▌░░▌█▀▒▒▒▒▒▄▀█▄▒▒▒▒▒▒▒█▒▐
░▐░░░▒▒▒▒▒▒▒▒▌██▀▒▒░░░▒▒▒▀▄
░▌░▒▄██▄▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒▌
▌▒▀▐▄█▄█▌▄░▀▒▒░░░░░░░░░░▒▒▌
''')

		else:
			print('\nGood Bye!')
			exit()

else:
	print('\nGood Bye!')
	exit()
